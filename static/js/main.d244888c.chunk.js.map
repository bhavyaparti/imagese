{"version":3,"sources":["components/SearchBar.js","components/Picture.js","components/SearchList.js","containers/Search.js","App.js","index.js"],"names":["SearchBar","props","className","type","placeholder","onChange","takeInput","onClick","btClick","Picture","src","url","SearchList","noRecordsFound","console","log","imagedataToDisplay","recordsFoundJSX","map","ele","images","original","length","Search","state","imagedata","searchTxtValue","event","data","target","value","this","searchValue","fetch","then","response","json","result","setState","catch","err","givemetheData","title","bind","searchNow","React","Component","App","ReactDom","render","document","getElementById"],"mappings":"0JACaA,EAAU,SAACC,GACpB,OACI,6BACI,2BAAOC,UAAU,sCAAjB,0CACA,6BACA,yBAAKA,UAAU,oBACX,2BAAOC,KAAK,OAAOD,UAAU,yBAAyBE,YAAY,yCAAyCC,SAAUJ,EAAMK,YAC3H,yBAAKJ,UAAU,sBACX,4BAAQA,UAAU,kBAAkBK,QAASN,EAAMO,SAAnD,cCRPC,EAAQ,SAACR,GAClB,OAAQ,yBAAKS,IAAKT,EAAMU,IAAKT,UAAU,uBCC9BU,EAAa,SAACX,GACvB,IAAMY,EAAe,+CACrBC,QAAQC,IAAId,EAAMe,oBAClB,IAAMC,EACF,oCACChB,EAAMe,mBAAmBE,KAAI,SAAAC,GAAG,OAAE,kBAAC,EAAD,CAASR,IAAKQ,EAAIC,OAAOC,SAASV,SACrE,kBAAC,EAAD,OAGJ,OACI,oCACkC,GAAjCV,EAAMe,mBAAmBM,OAAYT,EAAiBI,ICX1CM,E,kDACjB,WAAYtB,GAAO,IAAD,8BACd,cAAMA,IACDuB,MAAM,CAACC,UAAW,IACvB,EAAKC,eAAe,GAHN,E,mGASRC,GACN,IAAIC,EAAKD,EAAME,OAAOC,MACtBC,KAAKL,eAAeE,EACpBd,QAAQC,IAAI,qBAAqBgB,KAAKL,kB,oCAE5BM,GAAa,IAAD,OAChBrB,EAAI,mFAAD,OAAoFqB,EAApF,aACOC,MAAMtB,GACduB,MAAK,SAAAC,GACHA,EAASC,OACbF,MAAK,SAAAG,GACHvB,QAAQC,IAAI,UAAUsB,GACtB,EAAKC,SAAS,CAACb,UAAUY,EAAOT,UAEjCW,OAAM,SAAAC,GACL1B,QAAQC,IAAI,uBAEjBwB,OAAM,SAAAC,GACL1B,QAAQC,IAAI,+BAA+ByB,Q,kCAI/C1B,QAAQC,IAAI,qBACZgB,KAAKU,cAAcV,KAAKL,kB,+BAIxB,OADAZ,QAAQC,IAAI,qBAAqBgB,KAAKP,MAAMC,WAGxC,6BAEI,wBAAIvB,UAAU,0BAA0B6B,KAAK9B,MAAMyC,OACnD,kBAAC,EAAD,CAAWpC,UAAWyB,KAAKzB,UAAUqC,KAAKZ,MAAOvB,QAASuB,KAAKa,UAAUD,KAAKZ,QAC9E,kBAAC,EAAD,CAAYf,mBAAoBe,KAAKP,MAAMC,iB,GA3CvBoB,IAAMC,WCO3BC,MARf,WACU,OACE,yBAAK7C,UAAU,aACb,kBAAC,EAAD,CAAQwC,MAAM,0B,cCF5BM,EAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d244888c.chunk.js","sourcesContent":["import React from 'react';\r\nexport const SearchBar=(props)=>{\r\n    return(\r\n        <div>\r\n            <label className=\"text-warning m-1 h-25 w-50 d-block\">A PICTURE IS WORTH A THOUSAND WORDS!!!</label>\r\n            <br/>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className='form-control col-xl-11' placeholder=\"Type to search any image e.g.,Iron Man\" onChange={props.takeInput}/>\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\" onClick={props.btClick}>Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nexport const Picture=(props)=>{\r\n    return (<img src={props.url} className=\"w-25 p-3 m-1 h-50\"/>)\r\n}","import React from 'react';\r\nimport { Picture } from './Picture';\r\n// import {Picture} from './Picture';\r\nexport const SearchList = (props) => {\r\n    const noRecordsFound=<p>No Records Found</p>;\r\n    console.log(props.imagedataToDisplay);\r\n    const recordsFoundJSX=(\r\n        <>\r\n        {props.imagedataToDisplay.map(ele=><Picture url={ele.images.original.url} />)}\r\n        <Picture/>\r\n        </>\r\n   );\r\n    return(\r\n        <>\r\n        {props.imagedataToDisplay.length==0 ? noRecordsFound : recordsFoundJSX}\r\n        \r\n        </>\r\n    \r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { SearchList } from '../components/SearchList';\r\nexport default class Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={imagedata: [] };\r\n        this.searchTxtValue=\"\";\r\n    }\r\n    componentDidMount(){\r\n        // this.givemetheData();\r\n        \r\n    }\r\n    takeInput(event){\r\n        let data=event.target.value;\r\n        this.searchTxtValue=data;\r\n        console.log(\"Change has occured\",this.searchTxtValue);\r\n    }\r\n    givemetheData(searchValue){\r\n        const url=`https://api.giphy.com/v1/gifs/search?api_key=pxFUvUgOm5UJkLnArKGun7h8eHpL2obk&q=${searchValue}&limit=20`;\r\n        const promise = fetch(url);\r\n        promise.then(response=>{\r\n            var p=response.json();\r\n            p.then(result=>{\r\n                console.log(\"Data is\",result);\r\n                this.setState({imagedata:result.data});\r\n                \r\n            }).catch(err=>{\r\n                console.log('Error in json');\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"Can't fetch data from server\",err);\r\n        })\r\n    }\r\n    searchNow(){\r\n        console.log(\"Button is clicked\");\r\n        this.givemetheData(this.searchTxtValue);\r\n    }\r\n    render(){\r\n        console.log('The image data is:',this.state.imagedata);\r\n        return(\r\n            \r\n            <div>\r\n                \r\n                <h1 className=\"alert-info text-center\">{this.props.title}</h1>\r\n                <SearchBar takeInput={this.takeInput.bind(this)} btClick={this.searchNow.bind(this)}/>\r\n                <SearchList imagedataToDisplay={this.state.imagedata}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Search from './containers/Search.js';\nfunction App(){\n          return(\n            <div className=\"container\">\n              <Search title=\"Image Search Engine\"/>\n            </div>\n          )\n}\n\nexport default App;","import App from './App';\nimport ReactDom from'react-dom';\nimport React from 'react';\nReactDom.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}